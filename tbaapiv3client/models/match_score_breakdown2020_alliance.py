# coding: utf-8

"""
    The Blue Alliance API v3

    # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.  # noqa: E501

    The version of the OpenAPI document: 3.8.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from tbaapiv3client.configuration import Configuration


class MatchScoreBreakdown2020Alliance(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'init_line_robot1': 'str',
        'endgame_robot1': 'str',
        'init_line_robot2': 'str',
        'endgame_robot2': 'str',
        'init_line_robot3': 'str',
        'endgame_robot3': 'str',
        'auto_cells_bottom': 'int',
        'auto_cells_outer': 'int',
        'auto_cells_inner': 'int',
        'teleop_cells_bottom': 'int',
        'teleop_cells_outer': 'int',
        'teleop_cells_inner': 'int',
        'stage1_activated': 'bool',
        'stage2_activated': 'bool',
        'stage3_activated': 'bool',
        'stage3_target_color': 'str',
        'endgame_rung_is_level': 'str',
        'auto_init_line_points': 'int',
        'auto_cell_points': 'int',
        'auto_points': 'int',
        'teleop_cell_points': 'int',
        'control_panel_points': 'int',
        'endgame_points': 'int',
        'teleop_points': 'int',
        'shield_operational_ranking_point': 'bool',
        'shield_energized_ranking_point': 'bool',
        'tba_shield_energized_ranking_point_from_foul': 'bool',
        'tba_num_robots_hanging': 'int',
        'foul_count': 'int',
        'tech_foul_count': 'int',
        'adjust_points': 'int',
        'foul_points': 'int',
        'rp': 'int',
        'total_points': 'int'
    }

    attribute_map = {
        'init_line_robot1': 'initLineRobot1',
        'endgame_robot1': 'endgameRobot1',
        'init_line_robot2': 'initLineRobot2',
        'endgame_robot2': 'endgameRobot2',
        'init_line_robot3': 'initLineRobot3',
        'endgame_robot3': 'endgameRobot3',
        'auto_cells_bottom': 'autoCellsBottom',
        'auto_cells_outer': 'autoCellsOuter',
        'auto_cells_inner': 'autoCellsInner',
        'teleop_cells_bottom': 'teleopCellsBottom',
        'teleop_cells_outer': 'teleopCellsOuter',
        'teleop_cells_inner': 'teleopCellsInner',
        'stage1_activated': 'stage1Activated',
        'stage2_activated': 'stage2Activated',
        'stage3_activated': 'stage3Activated',
        'stage3_target_color': 'stage3TargetColor',
        'endgame_rung_is_level': 'endgameRungIsLevel',
        'auto_init_line_points': 'autoInitLinePoints',
        'auto_cell_points': 'autoCellPoints',
        'auto_points': 'autoPoints',
        'teleop_cell_points': 'teleopCellPoints',
        'control_panel_points': 'controlPanelPoints',
        'endgame_points': 'endgamePoints',
        'teleop_points': 'teleopPoints',
        'shield_operational_ranking_point': 'shieldOperationalRankingPoint',
        'shield_energized_ranking_point': 'shieldEnergizedRankingPoint',
        'tba_shield_energized_ranking_point_from_foul': 'tba_shieldEnergizedRankingPointFromFoul',
        'tba_num_robots_hanging': 'tba_numRobotsHanging',
        'foul_count': 'foulCount',
        'tech_foul_count': 'techFoulCount',
        'adjust_points': 'adjustPoints',
        'foul_points': 'foulPoints',
        'rp': 'rp',
        'total_points': 'totalPoints'
    }

    def __init__(self, init_line_robot1=None, endgame_robot1=None, init_line_robot2=None, endgame_robot2=None, init_line_robot3=None, endgame_robot3=None, auto_cells_bottom=None, auto_cells_outer=None, auto_cells_inner=None, teleop_cells_bottom=None, teleop_cells_outer=None, teleop_cells_inner=None, stage1_activated=None, stage2_activated=None, stage3_activated=None, stage3_target_color=None, endgame_rung_is_level=None, auto_init_line_points=None, auto_cell_points=None, auto_points=None, teleop_cell_points=None, control_panel_points=None, endgame_points=None, teleop_points=None, shield_operational_ranking_point=None, shield_energized_ranking_point=None, tba_shield_energized_ranking_point_from_foul=None, tba_num_robots_hanging=None, foul_count=None, tech_foul_count=None, adjust_points=None, foul_points=None, rp=None, total_points=None, local_vars_configuration=None):  # noqa: E501
        """MatchScoreBreakdown2020Alliance - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._init_line_robot1 = None
        self._endgame_robot1 = None
        self._init_line_robot2 = None
        self._endgame_robot2 = None
        self._init_line_robot3 = None
        self._endgame_robot3 = None
        self._auto_cells_bottom = None
        self._auto_cells_outer = None
        self._auto_cells_inner = None
        self._teleop_cells_bottom = None
        self._teleop_cells_outer = None
        self._teleop_cells_inner = None
        self._stage1_activated = None
        self._stage2_activated = None
        self._stage3_activated = None
        self._stage3_target_color = None
        self._endgame_rung_is_level = None
        self._auto_init_line_points = None
        self._auto_cell_points = None
        self._auto_points = None
        self._teleop_cell_points = None
        self._control_panel_points = None
        self._endgame_points = None
        self._teleop_points = None
        self._shield_operational_ranking_point = None
        self._shield_energized_ranking_point = None
        self._tba_shield_energized_ranking_point_from_foul = None
        self._tba_num_robots_hanging = None
        self._foul_count = None
        self._tech_foul_count = None
        self._adjust_points = None
        self._foul_points = None
        self._rp = None
        self._total_points = None
        self.discriminator = None

        if init_line_robot1 is not None:
            self.init_line_robot1 = init_line_robot1
        if endgame_robot1 is not None:
            self.endgame_robot1 = endgame_robot1
        if init_line_robot2 is not None:
            self.init_line_robot2 = init_line_robot2
        if endgame_robot2 is not None:
            self.endgame_robot2 = endgame_robot2
        if init_line_robot3 is not None:
            self.init_line_robot3 = init_line_robot3
        if endgame_robot3 is not None:
            self.endgame_robot3 = endgame_robot3
        if auto_cells_bottom is not None:
            self.auto_cells_bottom = auto_cells_bottom
        if auto_cells_outer is not None:
            self.auto_cells_outer = auto_cells_outer
        if auto_cells_inner is not None:
            self.auto_cells_inner = auto_cells_inner
        if teleop_cells_bottom is not None:
            self.teleop_cells_bottom = teleop_cells_bottom
        if teleop_cells_outer is not None:
            self.teleop_cells_outer = teleop_cells_outer
        if teleop_cells_inner is not None:
            self.teleop_cells_inner = teleop_cells_inner
        if stage1_activated is not None:
            self.stage1_activated = stage1_activated
        if stage2_activated is not None:
            self.stage2_activated = stage2_activated
        if stage3_activated is not None:
            self.stage3_activated = stage3_activated
        if stage3_target_color is not None:
            self.stage3_target_color = stage3_target_color
        if endgame_rung_is_level is not None:
            self.endgame_rung_is_level = endgame_rung_is_level
        if auto_init_line_points is not None:
            self.auto_init_line_points = auto_init_line_points
        if auto_cell_points is not None:
            self.auto_cell_points = auto_cell_points
        if auto_points is not None:
            self.auto_points = auto_points
        if teleop_cell_points is not None:
            self.teleop_cell_points = teleop_cell_points
        if control_panel_points is not None:
            self.control_panel_points = control_panel_points
        if endgame_points is not None:
            self.endgame_points = endgame_points
        if teleop_points is not None:
            self.teleop_points = teleop_points
        if shield_operational_ranking_point is not None:
            self.shield_operational_ranking_point = shield_operational_ranking_point
        if shield_energized_ranking_point is not None:
            self.shield_energized_ranking_point = shield_energized_ranking_point
        if tba_shield_energized_ranking_point_from_foul is not None:
            self.tba_shield_energized_ranking_point_from_foul = tba_shield_energized_ranking_point_from_foul
        if tba_num_robots_hanging is not None:
            self.tba_num_robots_hanging = tba_num_robots_hanging
        if foul_count is not None:
            self.foul_count = foul_count
        if tech_foul_count is not None:
            self.tech_foul_count = tech_foul_count
        if adjust_points is not None:
            self.adjust_points = adjust_points
        if foul_points is not None:
            self.foul_points = foul_points
        if rp is not None:
            self.rp = rp
        if total_points is not None:
            self.total_points = total_points

    @property
    def init_line_robot1(self):
        """Gets the init_line_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The init_line_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._init_line_robot1

    @init_line_robot1.setter
    def init_line_robot1(self, init_line_robot1):
        """Sets the init_line_robot1 of this MatchScoreBreakdown2020Alliance.


        :param init_line_robot1: The init_line_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._init_line_robot1 = init_line_robot1

    @property
    def endgame_robot1(self):
        """Gets the endgame_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The endgame_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._endgame_robot1

    @endgame_robot1.setter
    def endgame_robot1(self, endgame_robot1):
        """Sets the endgame_robot1 of this MatchScoreBreakdown2020Alliance.


        :param endgame_robot1: The endgame_robot1 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._endgame_robot1 = endgame_robot1

    @property
    def init_line_robot2(self):
        """Gets the init_line_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The init_line_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._init_line_robot2

    @init_line_robot2.setter
    def init_line_robot2(self, init_line_robot2):
        """Sets the init_line_robot2 of this MatchScoreBreakdown2020Alliance.


        :param init_line_robot2: The init_line_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._init_line_robot2 = init_line_robot2

    @property
    def endgame_robot2(self):
        """Gets the endgame_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The endgame_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._endgame_robot2

    @endgame_robot2.setter
    def endgame_robot2(self, endgame_robot2):
        """Sets the endgame_robot2 of this MatchScoreBreakdown2020Alliance.


        :param endgame_robot2: The endgame_robot2 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._endgame_robot2 = endgame_robot2

    @property
    def init_line_robot3(self):
        """Gets the init_line_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The init_line_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._init_line_robot3

    @init_line_robot3.setter
    def init_line_robot3(self, init_line_robot3):
        """Sets the init_line_robot3 of this MatchScoreBreakdown2020Alliance.


        :param init_line_robot3: The init_line_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._init_line_robot3 = init_line_robot3

    @property
    def endgame_robot3(self):
        """Gets the endgame_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The endgame_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._endgame_robot3

    @endgame_robot3.setter
    def endgame_robot3(self, endgame_robot3):
        """Sets the endgame_robot3 of this MatchScoreBreakdown2020Alliance.


        :param endgame_robot3: The endgame_robot3 of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._endgame_robot3 = endgame_robot3

    @property
    def auto_cells_bottom(self):
        """Gets the auto_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_cells_bottom

    @auto_cells_bottom.setter
    def auto_cells_bottom(self, auto_cells_bottom):
        """Sets the auto_cells_bottom of this MatchScoreBreakdown2020Alliance.


        :param auto_cells_bottom: The auto_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_cells_bottom = auto_cells_bottom

    @property
    def auto_cells_outer(self):
        """Gets the auto_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_cells_outer

    @auto_cells_outer.setter
    def auto_cells_outer(self, auto_cells_outer):
        """Sets the auto_cells_outer of this MatchScoreBreakdown2020Alliance.


        :param auto_cells_outer: The auto_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_cells_outer = auto_cells_outer

    @property
    def auto_cells_inner(self):
        """Gets the auto_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_cells_inner

    @auto_cells_inner.setter
    def auto_cells_inner(self, auto_cells_inner):
        """Sets the auto_cells_inner of this MatchScoreBreakdown2020Alliance.


        :param auto_cells_inner: The auto_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_cells_inner = auto_cells_inner

    @property
    def teleop_cells_bottom(self):
        """Gets the teleop_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The teleop_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._teleop_cells_bottom

    @teleop_cells_bottom.setter
    def teleop_cells_bottom(self, teleop_cells_bottom):
        """Sets the teleop_cells_bottom of this MatchScoreBreakdown2020Alliance.


        :param teleop_cells_bottom: The teleop_cells_bottom of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._teleop_cells_bottom = teleop_cells_bottom

    @property
    def teleop_cells_outer(self):
        """Gets the teleop_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The teleop_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._teleop_cells_outer

    @teleop_cells_outer.setter
    def teleop_cells_outer(self, teleop_cells_outer):
        """Sets the teleop_cells_outer of this MatchScoreBreakdown2020Alliance.


        :param teleop_cells_outer: The teleop_cells_outer of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._teleop_cells_outer = teleop_cells_outer

    @property
    def teleop_cells_inner(self):
        """Gets the teleop_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The teleop_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._teleop_cells_inner

    @teleop_cells_inner.setter
    def teleop_cells_inner(self, teleop_cells_inner):
        """Sets the teleop_cells_inner of this MatchScoreBreakdown2020Alliance.


        :param teleop_cells_inner: The teleop_cells_inner of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._teleop_cells_inner = teleop_cells_inner

    @property
    def stage1_activated(self):
        """Gets the stage1_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The stage1_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._stage1_activated

    @stage1_activated.setter
    def stage1_activated(self, stage1_activated):
        """Sets the stage1_activated of this MatchScoreBreakdown2020Alliance.


        :param stage1_activated: The stage1_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._stage1_activated = stage1_activated

    @property
    def stage2_activated(self):
        """Gets the stage2_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The stage2_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._stage2_activated

    @stage2_activated.setter
    def stage2_activated(self, stage2_activated):
        """Sets the stage2_activated of this MatchScoreBreakdown2020Alliance.


        :param stage2_activated: The stage2_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._stage2_activated = stage2_activated

    @property
    def stage3_activated(self):
        """Gets the stage3_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The stage3_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._stage3_activated

    @stage3_activated.setter
    def stage3_activated(self, stage3_activated):
        """Sets the stage3_activated of this MatchScoreBreakdown2020Alliance.


        :param stage3_activated: The stage3_activated of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._stage3_activated = stage3_activated

    @property
    def stage3_target_color(self):
        """Gets the stage3_target_color of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The stage3_target_color of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._stage3_target_color

    @stage3_target_color.setter
    def stage3_target_color(self, stage3_target_color):
        """Sets the stage3_target_color of this MatchScoreBreakdown2020Alliance.


        :param stage3_target_color: The stage3_target_color of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._stage3_target_color = stage3_target_color

    @property
    def endgame_rung_is_level(self):
        """Gets the endgame_rung_is_level of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The endgame_rung_is_level of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: str
        """
        return self._endgame_rung_is_level

    @endgame_rung_is_level.setter
    def endgame_rung_is_level(self, endgame_rung_is_level):
        """Sets the endgame_rung_is_level of this MatchScoreBreakdown2020Alliance.


        :param endgame_rung_is_level: The endgame_rung_is_level of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: str
        """

        self._endgame_rung_is_level = endgame_rung_is_level

    @property
    def auto_init_line_points(self):
        """Gets the auto_init_line_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_init_line_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_init_line_points

    @auto_init_line_points.setter
    def auto_init_line_points(self, auto_init_line_points):
        """Sets the auto_init_line_points of this MatchScoreBreakdown2020Alliance.


        :param auto_init_line_points: The auto_init_line_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_init_line_points = auto_init_line_points

    @property
    def auto_cell_points(self):
        """Gets the auto_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_cell_points

    @auto_cell_points.setter
    def auto_cell_points(self, auto_cell_points):
        """Sets the auto_cell_points of this MatchScoreBreakdown2020Alliance.


        :param auto_cell_points: The auto_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_cell_points = auto_cell_points

    @property
    def auto_points(self):
        """Gets the auto_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The auto_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._auto_points

    @auto_points.setter
    def auto_points(self, auto_points):
        """Sets the auto_points of this MatchScoreBreakdown2020Alliance.


        :param auto_points: The auto_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._auto_points = auto_points

    @property
    def teleop_cell_points(self):
        """Gets the teleop_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The teleop_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._teleop_cell_points

    @teleop_cell_points.setter
    def teleop_cell_points(self, teleop_cell_points):
        """Sets the teleop_cell_points of this MatchScoreBreakdown2020Alliance.


        :param teleop_cell_points: The teleop_cell_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._teleop_cell_points = teleop_cell_points

    @property
    def control_panel_points(self):
        """Gets the control_panel_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The control_panel_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._control_panel_points

    @control_panel_points.setter
    def control_panel_points(self, control_panel_points):
        """Sets the control_panel_points of this MatchScoreBreakdown2020Alliance.


        :param control_panel_points: The control_panel_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._control_panel_points = control_panel_points

    @property
    def endgame_points(self):
        """Gets the endgame_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The endgame_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._endgame_points

    @endgame_points.setter
    def endgame_points(self, endgame_points):
        """Sets the endgame_points of this MatchScoreBreakdown2020Alliance.


        :param endgame_points: The endgame_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._endgame_points = endgame_points

    @property
    def teleop_points(self):
        """Gets the teleop_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The teleop_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._teleop_points

    @teleop_points.setter
    def teleop_points(self, teleop_points):
        """Sets the teleop_points of this MatchScoreBreakdown2020Alliance.


        :param teleop_points: The teleop_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._teleop_points = teleop_points

    @property
    def shield_operational_ranking_point(self):
        """Gets the shield_operational_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The shield_operational_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._shield_operational_ranking_point

    @shield_operational_ranking_point.setter
    def shield_operational_ranking_point(self, shield_operational_ranking_point):
        """Sets the shield_operational_ranking_point of this MatchScoreBreakdown2020Alliance.


        :param shield_operational_ranking_point: The shield_operational_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._shield_operational_ranking_point = shield_operational_ranking_point

    @property
    def shield_energized_ranking_point(self):
        """Gets the shield_energized_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The shield_energized_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._shield_energized_ranking_point

    @shield_energized_ranking_point.setter
    def shield_energized_ranking_point(self, shield_energized_ranking_point):
        """Sets the shield_energized_ranking_point of this MatchScoreBreakdown2020Alliance.


        :param shield_energized_ranking_point: The shield_energized_ranking_point of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._shield_energized_ranking_point = shield_energized_ranking_point

    @property
    def tba_shield_energized_ranking_point_from_foul(self):
        """Gets the tba_shield_energized_ranking_point_from_foul of this MatchScoreBreakdown2020Alliance.  # noqa: E501

        Unofficial TBA-computed value that indicates whether the shieldEnergizedRankingPoint was earned normally or awarded due to a foul.  # noqa: E501

        :return: The tba_shield_energized_ranking_point_from_foul of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: bool
        """
        return self._tba_shield_energized_ranking_point_from_foul

    @tba_shield_energized_ranking_point_from_foul.setter
    def tba_shield_energized_ranking_point_from_foul(self, tba_shield_energized_ranking_point_from_foul):
        """Sets the tba_shield_energized_ranking_point_from_foul of this MatchScoreBreakdown2020Alliance.

        Unofficial TBA-computed value that indicates whether the shieldEnergizedRankingPoint was earned normally or awarded due to a foul.  # noqa: E501

        :param tba_shield_energized_ranking_point_from_foul: The tba_shield_energized_ranking_point_from_foul of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: bool
        """

        self._tba_shield_energized_ranking_point_from_foul = tba_shield_energized_ranking_point_from_foul

    @property
    def tba_num_robots_hanging(self):
        """Gets the tba_num_robots_hanging of this MatchScoreBreakdown2020Alliance.  # noqa: E501

        Unofficial TBA-computed value that counts the number of robots who were hanging at the end of the match.  # noqa: E501

        :return: The tba_num_robots_hanging of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._tba_num_robots_hanging

    @tba_num_robots_hanging.setter
    def tba_num_robots_hanging(self, tba_num_robots_hanging):
        """Sets the tba_num_robots_hanging of this MatchScoreBreakdown2020Alliance.

        Unofficial TBA-computed value that counts the number of robots who were hanging at the end of the match.  # noqa: E501

        :param tba_num_robots_hanging: The tba_num_robots_hanging of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._tba_num_robots_hanging = tba_num_robots_hanging

    @property
    def foul_count(self):
        """Gets the foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._foul_count

    @foul_count.setter
    def foul_count(self, foul_count):
        """Sets the foul_count of this MatchScoreBreakdown2020Alliance.


        :param foul_count: The foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._foul_count = foul_count

    @property
    def tech_foul_count(self):
        """Gets the tech_foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The tech_foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._tech_foul_count

    @tech_foul_count.setter
    def tech_foul_count(self, tech_foul_count):
        """Sets the tech_foul_count of this MatchScoreBreakdown2020Alliance.


        :param tech_foul_count: The tech_foul_count of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._tech_foul_count = tech_foul_count

    @property
    def adjust_points(self):
        """Gets the adjust_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The adjust_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._adjust_points

    @adjust_points.setter
    def adjust_points(self, adjust_points):
        """Sets the adjust_points of this MatchScoreBreakdown2020Alliance.


        :param adjust_points: The adjust_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._adjust_points = adjust_points

    @property
    def foul_points(self):
        """Gets the foul_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The foul_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._foul_points

    @foul_points.setter
    def foul_points(self, foul_points):
        """Sets the foul_points of this MatchScoreBreakdown2020Alliance.


        :param foul_points: The foul_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._foul_points = foul_points

    @property
    def rp(self):
        """Gets the rp of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The rp of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._rp

    @rp.setter
    def rp(self, rp):
        """Sets the rp of this MatchScoreBreakdown2020Alliance.


        :param rp: The rp of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._rp = rp

    @property
    def total_points(self):
        """Gets the total_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501


        :return: The total_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :rtype: int
        """
        return self._total_points

    @total_points.setter
    def total_points(self, total_points):
        """Sets the total_points of this MatchScoreBreakdown2020Alliance.


        :param total_points: The total_points of this MatchScoreBreakdown2020Alliance.  # noqa: E501
        :type: int
        """

        self._total_points = total_points

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MatchScoreBreakdown2020Alliance):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MatchScoreBreakdown2020Alliance):
            return True

        return self.to_dict() != other.to_dict()
