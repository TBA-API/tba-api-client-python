# coding: utf-8

"""
    The Blue Alliance API v3

    # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.  # noqa: E501

    The version of the OpenAPI document: 3.8.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tbaapiv3client
from tbaapiv3client.models.zebra import Zebra  # noqa: E501
from tbaapiv3client.rest import ApiException

class TestZebra(unittest.TestCase):
    """Zebra unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Zebra
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tbaapiv3client.models.zebra.Zebra()  # noqa: E501
        if include_optional :
            return Zebra(
                key = '0', 
                times = [
                    1.337
                    ], 
                alliances = tbaapiv3client.models.zebra_alliances.Zebra_alliances(
                    red = [
                        tbaapiv3client.models.zebra_team.Zebra_team(
                            team_key = 'frc7332', 
                            xs = [
                                1.337
                                ], 
                            ys = [
                                1.337
                                ], )
                        ], 
                    blue = [
                        tbaapiv3client.models.zebra_team.Zebra_team(
                            team_key = 'frc7332', 
                            xs = [
                                1.337
                                ], 
                            ys = [
                                1.337
                                ], )
                        ], )
            )
        else :
            return Zebra(
                key = '0',
                times = [
                    1.337
                    ],
                alliances = tbaapiv3client.models.zebra_alliances.Zebra_alliances(
                    red = [
                        tbaapiv3client.models.zebra_team.Zebra_team(
                            team_key = 'frc7332', 
                            xs = [
                                1.337
                                ], 
                            ys = [
                                1.337
                                ], )
                        ], 
                    blue = [
                        tbaapiv3client.models.zebra_team.Zebra_team(
                            team_key = 'frc7332', 
                            xs = [
                                1.337
                                ], 
                            ys = [
                                1.337
                                ], )
                        ], ),
        )

    def testZebra(self):
        """Test Zebra"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
